# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Pages/Jekyll.gitlab-ci.yml

# Template project: https://gitlab.com/pages/jekyll
# Docs: https://docs.gitlab.com/ee/pages/
image: ruby:2.6

variables:
  JEKYLL_ENV: production
  LC_ALL: C.UTF-8

before_script:
  - gem install bundler
  - bundle install

stages:
- test
- build
- deploy

qa_test:
  tags:
  - docker
  stage: test
  environment:
    name: qa
  script:
  - bundle exec jekyll doctor --config _config.yml,_config-qa.yml
  artifacts:
    paths:
    - qa
  except:
  - release

qa_build:
  tags:
  - docker
  stage: build
  environment:
    name: qa
  script:
  - bundle exec jekyll build -d qa --strict_front_matter --config _config.yml,_config-qa.yml
  artifacts:
    paths:
    - qa
  except:
  - release

qa_deploy:
  image: python:latest
  tags:
  - docker
  stage: deploy
  environment:
    name: qa
  before_script:
  - pip install awscli
  script:
  - aws s3 cp ./qa s3://lil-gitlab-jekyll --recursive 
  artifacts:
    paths:
    - qa
  except:
  - release

staging_test:
  tags:
  - docker
  stage: test
  environment:
    name: staging
  script:
  - bundle exec jekyll doctor --config _config.yml,_config-staging.yml
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-staging/

staging_build:
  tags:
  - docker
  stage: build
  environment:
    name: staging
  script:
  - bundle exec jekyll build -d staging --strict_front_matter --config _config.yml,_config-staging.yml
  artifacts:
    paths:
    - staging
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-staging/

staging_deploy:
  image: python:latest
  tags:
  - docker
  stage: deploy
  environment:
    name: staging
  before_script:
  - pip install awscli
  script:
  - aws s3 cp ./staging s3://lil-gitlab-jekkylstaging --recursive 
  artifacts:
    paths:
    - staging
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-staging/

prod_test:
  tags:
  - docker
  stage: test
  environment:
    name: prod
  script:
  - bundle exec jekyll doctor
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-prod/
    - $RELEASE == "prod"

prod_build:
  tags:
  - docker
  stage: build
  environment:
    name: prod
  script:
  - bundle exec jekyll build -d prod --strict_front_matter 
  artifacts:
    paths:
    - prod
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-prod/
    - $RELEASE == "prod"

prod_deploy:
  image: python:latest
  tags:
  - docker
  stage: deploy
  environment:
    name: prod
  before_script:
  - pip install awscli
  script:
  - aws s3 cp ./prod s3://lil-gitlab-jekyll-prod1 --recursive 
  artifacts:
    paths:
    - prod
  only:
    refs:
    - release
    variables:
    - $CI_COMMIT_MESSAGE =~ /release-to-prod/
    - $RELEASE == "prod"
